{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","App.tsx","components/Loader/Loader.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api.ts","components/TodoModal/TodoModal.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","Loader","className","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoFilter","dispatch","handleQueryChange","event","filterActions","value","target","onSubmit","preventDefault","onChange","handleFilterChange","placeholder","length","style","pointerEvents","onClick","TodoItem","classNames","id","completed","title","todoActions","TodoList","filteredTodos","useMemo","todosList","normalizedBase","toLowerCase","normalizedQuery","trim","currentQuery","includes","map","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","currentUser","href","email","name","HomePage","isLoading","setIsLoading","isError","setIsError","getTodoList","a","todoList","todosActions","NotFoundPage","Root","path","element","index","to","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5603b959.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'query/SET';\n  payload: string;\n};\n\ntype SetStatusAction = {\n  type: 'status/SET';\n  payload: Status;\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'query/SET',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'status/SET',\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst filterReducer = (\n  state: State = {\n    query: '',\n    status: 'all',\n  },\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'query/SET':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'status/SET':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetAllTodosAction = {\n  type: 'allTodos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetAllTodosAction => ({\n  type: 'allTodos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[] | [];\ntype Action = SetAllTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'allTodos/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import {\n  createStore,\n  applyMiddleware,\n  combineReducers,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Outlet } from 'react-router-dom';\n\nexport const App: React.FC = () => <Outlet />;\n","import './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import {\n  TypedUseSelectorHook,\n  useDispatch,\n  useSelector,\n} from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ChangeEvent } from 'react';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const filter = useAppSelector(state => state.filter);\n  const query = useAppSelector(state => state.filter.query);\n\n  const handleFilterChange = (\n    event: ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const { value } = event.target;\n\n    dispatch(filterActions.setStatus(value as Status));\n  };\n\n  const handleQueryChange = (\n    event?: ChangeEvent<HTMLInputElement>,\n  ) => {\n    if (!event) {\n      return dispatch(filterActions.setQuery(''));\n    }\n\n    const { value } = event.target;\n\n    return dispatch(filterActions.setQuery(value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleFilterChange(event)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p\n        className=\"\n          control\n          is-expanded\n          has-icons-left\n          has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={(event) => handleQueryChange(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0\n          && (\n            <span\n              className=\"icon is-right\"\n              style={{ pointerEvents: 'all' }}\n            >\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                aria-label=\"delete\"\n                onClick={() => handleQueryChange()}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../app/hooks';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const handleSelectTodo = (item: Todo) => {\n    dispatch(todoActions.setTodo(item));\n  };\n\n  return (\n    <tr\n      className={classNames(\n        currentTodo?.id === todo.id\n          ? 'has-background-info-light'\n          : '',\n      )}\n      data-cy=\"todo\"\n    >\n      <td className=\"is-vcentered\">\n        {todo.id}\n      </td>\n\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            !todo.completed\n              ? 'has-text-danger'\n              : 'has-text-success',\n          )}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleSelectTodo(todo)}\n        >\n          <span className=\"icon\">\n            {currentTodo?.id === todo.id\n              ? <i className=\"far fa-eye-slash\" />\n              : <i className=\"far fa-eye\" />}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { useMemo } from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n  const todos = useAppSelector(state => state.todos);\n\n  const getFilteredTodos = (todosList: Todo[]) => {\n    if (!todosList.length) {\n      return [];\n    }\n\n    return todosList.filter(todo => {\n      const normalizedBase = todo.title.toLowerCase();\n      const normalizedQuery = query.toLowerCase().trim();\n      const currentQuery = normalizedBase.includes(normalizedQuery);\n\n      switch (status) {\n        case 'active':\n          return !todo.completed && currentQuery;\n\n        case 'completed':\n          return todo.completed && currentQuery;\n\n        default:\n        case 'all':\n          return todo && currentQuery;\n      }\n    });\n  };\n\n  const filteredTodos = useMemo(() => (\n    getFilteredTodos(todos)\n  ), [todos, query, status]);\n\n  return (\n    <>\n      {!filteredTodos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {filteredTodos.length > 0\n        && (\n          <table\n            className=\"\n              table\n              is-narrow\n              is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {filteredTodos.map(todo => (\n                <TodoItem\n                  key={todo.id}\n                  todo={todo}\n                />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../app/hooks';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleCloseTodo = () => {\n    dispatch(todoActions.removeTodo());\n  };\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(currentUser => setUser(currentUser));\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"\n                modal-card-title\n                has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"delete\"\n              onClick={() => handleCloseTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { TodoFilter } from '../../components/TodoFilter';\nimport { TodoList } from '../../components/TodoList';\nimport { TodoModal } from '../../components/TodoModal';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../app/hooks';\nimport { getTodos } from '../../api';\nimport { actions as todosActions } from '../../features/todos';\n\nexport const HomePage: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const todo = useAppSelector(state => state.currentTodo);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getTodoList = async () => {\n    setIsLoading(true);\n    setIsError(false);\n\n    try {\n      const todoList = await getTodos();\n\n      dispatch(todosActions.setTodos(todoList));\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodoList();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">\n              Todos:\n            </h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {!isLoading\n                && !isError\n                && (\n                  <TodoList />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal />\n      )}\n\n      {isError && (\n        <div\n          className=\"\n            container\n            box\n            notification\n            is-danger\n            is-light\"\n        >\n          Oh, no! Error during loading data from server!\n        </div>\n      )}\n    </>\n  );\n};\n","import './NotFoundPage.scss';\n\nexport const NotFoundPage: React.FC = () => (\n  <div className=\"section\">\n    <div className=\"container\">\n      <div className=\"box\">\n        <div\n          className=\"\n            container\n            box\n            notification\n            is-danger\n            is-light\"\n        >\n          Oh, no! Page is not found...\n        </div>\n\n        <span className=\"not-found-page__image\" />\n      </div>\n    </div>\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { store } from './app/store';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}